services:

  # контейнер основного приложения
  lesta-games-app:
    build: .
    container_name: ${APP_CONTAINER_NAME}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - ./src:/src
      - ./docs:/docs
    env_file:
      - .env
    depends_on:
      lesta-games-db:
        condition: service_healthy
    networks:
      - lesta

  # контейнер БД Postgres
  lesta-games-db:
    image: postgres:15-alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-54320}:5432"
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
    healthcheck:
      # https://www.postgresql.org/docs/current/app-pg-isready.html
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lesta

  # контейнер PGAdmin
  lesta-games-pg:
    image: dpage/pgadmin4
    container_name: ${PGADMIN_CONTAINER_NAME}
    restart: always
    ports:
      - "${PGADMIN_PORT:-8888}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - lesta

  # контейнер Celery
  lesta-games-celery:
    build: .
    container_name: ${CELERY_CONTAINER_NAME}
    command: celery -A worker worker --loglevel=info
    volumes:
      - ./src:/src
    env_file:
      - .env
    depends_on:
      lesta-games-db:
        condition: service_healthy
      lesta-games-redis:
        condition: service_started
    networks:
      - lesta

  # контейнер Redis
  lesta-games-redis:
    image: redis:7
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - lesta

  lesta-games-prometheus:
    image: prom/prometheus
    container_name: ${PROMETHEUS_CONTAINER_NAME}
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - lesta


  lesta-games-grafana:
    image: grafana/grafana
    container_name: ${GRAFANA_CONTAINER_NAME}
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - lesta

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager
    container_name: nginx-proxy-manager
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - lesta

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data
  grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./grafana_data
  postgres_data:

networks:
  lesta:
    driver: bridge
